{"ast":null,"code":"var _jsxFileName = \"/Users/stitaprajnapanda/Documents/my-app 3/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction creattextfile(username) {\n  fso = CreateObject(\"Scripting.FileSystemObject\");\n  s = fso.CreateTextFile(`.\\Database\\${username}.txt`, True);\n}\nexport default function Login() {\n  _s();\n  // React States\n  const navigate = useNavigate({});\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // User Login info\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0];\n\n    // Find user login info\n    const userData = database.find(user => user.username === uname.value);\n    // create a text file if not present\n\n    // Compare user info\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      const newuser = {\n        username: uname.value,\n        password: pass.value\n      };\n      database.push(newuser);\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n\n  // JSX code for login form\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), isSubmitted ? navigate(\"/Chatbot\") : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"oWq27W7forDwLtl1/5dglDriywk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","creattextfile","username","fso","CreateObject","s","CreateTextFile","True","Login","_s","navigate","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","newuser","push","renderErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderForm","onSubmit","type","required","_c","$RefreshReg$"],"sources":["/Users/stitaprajnapanda/Documents/my-app 3/src/pages/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction creattextfile(username){\n  fso = CreateObject(\"Scripting.FileSystemObject\");  \n  s = fso.CreateTextFile(`.\\Database\\${username}.txt`, True);\n}\n\nexport default function Login() {\n  // React States\n  const navigate = useNavigate({});\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  \n  \n  // User Login info\n  const database = [\n    {\n      username: \"user1\",\n      password: \"pass1\"\n    },\n    {\n      username: \"user2\",\n      password: \"pass2\"\n    }\n  ];\n\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = (event) => {\n    //Prevent page reload\n    event.preventDefault();\n\n    var { uname, pass } = document.forms[0];\n\n    // Find user login info\n    const userData = database.find((user) => user.username === uname.value);\n    // create a text file if not present\n    \n    // Compare user info\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({ name: \"pass\", message: errors.pass });\n      } else {\n        setIsSubmitted(true);\n        \n      }\n    } else {\n      // Username not found\n      const newuser = {\n                      username:uname.value,\n                      password:pass.value\n                    }\n\n      database.push(newuser);\n\n      setErrorMessages({ name: \"uname\", message: errors.uname });\n    }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n    );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Username </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"button-container\">\n          <input type=\"submit\" />\n        </div>\n      </form>\n    </div>\n  );\n  \n  return (\n    <div className=\"app\">\n      <div className=\"login-form\">\n        <div className=\"title\">Sign In</div>\n        {isSubmitted ? navigate(\"/Chatbot\") : renderForm}\n      </div>\n      \n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}